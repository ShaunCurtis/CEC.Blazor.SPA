@using Microsoft.AspNetCore.Components.Forms
@using CEC.Blazor.SPA.Components.Forms
@using CEC.Blazor.SPA.Components.UIControls
@using CEC.Blazor.SPA.Components.FormControls
@using CEC.Weather.Data

@namespace CEC.Weather.Components
@inherits EditRecordFormBase<DbWeatherForecast, WeatherForecastDbContext>

    <UICard IsCollapsible="false">

        <Header>
            @this.PageTitle
        </Header>

        <Body>

            <UIErrorHandler IsError="@this.IsError" IsLoading="this.Loading" ErrorMessage="@this.RecordErrorMessage">

                <ChildContent>

                    <CascadingValue Value="this.EditContext">

                        <UIContainer>

                            <UIFormRow>

                                <UILabelColumn Columns="4">
                                    Record ID:
                                </UILabelColumn>

                                <UIColumn Columns="2">
                                    <InputReadOnlyText Value="@this.WeatherForecastEditorContext.WeatherForecastID.ToString()"></InputReadOnlyText>
                                </UIColumn>

                            </UIFormRow>

                            <UIFormRow>

                                <UILabelColumn Columns="4">
                                    Record Date:
                                </UILabelColumn>

                                <UIColumn Columns="4">
                                    <InputDate class="form-control" @bind-Value="this.WeatherForecastEditorContext.WeatherForecastDate"></InputDate>
                                </UIColumn>

                            </UIFormRow>

                            <UIFormRow>

                                <UILabelColumn Columns="4">
                                    Temperature &deg; C:
                                </UILabelColumn>

                                <UIColumn Columns="2">
                                    <InputNumber class="form-control" @bind-Value="this.WeatherForecastEditorContext.WeatherForecastTemperatureC"></InputNumber>
                                </UIColumn>

                                <UIColumn Columns="6">
                                    <ValidationMessage For=@(() => this.WeatherForecastEditorContext.WeatherForecastTemperatureC) />
                                </UIColumn>

                            </UIFormRow>

                            <UIFormRow>

                                <UILabelColumn Columns="4">
                                    Post Code:
                                </UILabelColumn>

                                <UIColumn Columns="4">
                                    <InputText class="form-control" @bind-Value="this.WeatherForecastEditorContext.WeatherForecastPostCode"></InputText>
                                </UIColumn>

                                <UIColumn Columns="4">
                                    <ValidationMessage For=@(() => this.WeatherForecastEditorContext.WeatherForecastPostCode) />
                                </UIColumn>

                            </UIFormRow>

                            <UIFormRow>

                                <UILabelColumn Columns="4">
                                    Description:
                                </UILabelColumn>

                                <UIColumn Columns="8">
                                    <InputText class="form-control" @bind-Value="this.WeatherForecastEditorContext.WeatherForecastDescription"></InputText>
                                    <ValidationMessage For=@(() => this.WeatherForecastEditorContext.WeatherForecastDescription) />
                                </UIColumn>

                            </UIFormRow>

                            <UIFormRow>

                                <UILabelColumn Columns="4">
                                    Frost?:
                                </UILabelColumn>

                                <UIColumn Columns="2">
                                    <div class="form-check">
                                        <InputCheckbox class="form-check-input position-static" @bind-Value="this.WeatherForecastEditorContext.WeatherForecastFrost"></InputCheckbox>
                                    </div>
                                </UIColumn>

                            </UIFormRow>

                            <UIFormRow>

                                <UILabelColumn Columns="4">
                                    Summary:
                                </UILabelColumn>

                                <UIColumn Columns="4">
                                    <InputSelect class="form-control" @bind-Value="this.WeatherForecastEditorContext.WeatherForecastSummary">
                                        @foreach (var value in Enum.GetValues(typeof(WeatherSummary)))
                                        {
                                            <option value="@value">@value</option>
                                        }
                                    </InputSelect>
                                </UIColumn>

                            </UIFormRow>

                            <UIFormRow>

                                <UILabelColumn Columns="4">
                                    Outlook:
                                </UILabelColumn>

                                <UIColumn Columns="8">
                                    <InputButtonGroup OptionList="this.ControllerService.OutlookOptionList" class="form-control" @bind-Value="@this.WeatherForecastEditorContext.WeatherForecastOutlookValue"></InputButtonGroup>
                                </UIColumn>

                            </UIFormRow>

                            <UIFormRow>

                                <UILabelColumn Columns="4">
                                    Detail:
                                </UILabelColumn>

                                <UIColumn Columns="8">
                                    <InputTextArea class="form-control" rows="6" @bind-Value="this.WeatherForecastEditorContext.WeatherForecastDetail"></InputTextArea>
                                </UIColumn>

                            </UIFormRow>

                        </UIContainer>

                    </CascadingValue>

                </ChildContent>

                <AlwaysDisplayContent>

                    <UIContainer>

                        <UIRow>

                            <UIColumn Columns="7">
                                <UIAlert Alert="this.AlertMessage" SizeCode="Bootstrap.SizeCode.sm"></UIAlert>
                            </UIColumn>
                            <UIButtonColumn Columns="5">

                                <UIButton Show="(!this.IsClean) && this.IsLoaded" ClickEvent="this.SaveAndExit" ColourCode="Bootstrap.ColourCode.save">Save &amp; Exit</UIButton>

                                <UIButton Show="(!this.IsClean) && this.IsLoaded" ClickEvent="this.Save" ColourCode="Bootstrap.ColourCode.save">Save</UIButton>

                                <UIButton Show="(!this.IsClean) && this.IsLoaded" ClickEvent="this.ConfirmExit" ColourCode="Bootstrap.ColourCode.danger_exit">Exit Without Saving</UIButton>

                                <UIButton Show="this.IsClean" ClickEvent="this.TryExit" ColourCode="Bootstrap.ColourCode.nav">Exit</UIButton>

                            </UIButtonColumn>

                        </UIRow>

                    </UIContainer>

                </AlwaysDisplayContent>


            </UIErrorHandler>

        </Body>

    </UICard>
